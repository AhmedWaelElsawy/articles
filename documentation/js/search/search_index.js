var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.221,1,2.179]],["body/controllers/AppController.html",[0,1.926,1,3.438,2,1.519,3,0.322,4,0.279,5,0.279,6,3.459,7,0.411,8,1.926,9,5.062,10,0.986,11,0.028,12,0.611,13,4.108,14,1.519,15,1.791,16,0.408,17,0.915,18,3.124,19,3.459,20,0.322,21,0.151,22,3.031,23,1.903,24,1.519,25,4.108,26,0.017,27,0.021,28,0.017]],["title/modules/AppModule.html",[29,1.057,30,2.179]],["body/modules/AppModule.html",[1,3.146,2,1.513,3,0.225,4,0.195,5,0.195,11,0.028,16,0.485,17,0.639,18,3.118,19,2.417,20,0.225,21,0.106,26,0.012,27,0.017,28,0.012,29,1.526,30,4.297,31,1.231,32,1.231,33,1.441,34,1.441,35,1.231,36,2.392,37,1.441,38,2.417,39,2.417,40,2.417,41,2.865,42,2.644,43,3.412,44,3.412,45,3.118,46,2.054,47,1.441,48,1.441,49,2.871,50,2.446,51,2.871,52,1.895,53,1.717,54,1.143,55,2.119,56,2.871,57,2.871,58,2.417,59,2.119,60,2.871,61,2.871]],["title/injectables/AppService.html",[18,1.804,62,1.057]],["body/injectables/AppService.html",[3,0.34,4,0.295,5,0.295,7,0.434,8,1.992,9,5.161,11,0.027,12,0.645,14,1.604,15,1.853,16,0.34,17,0.966,18,2.943,20,0.34,21,0.16,24,1.604,26,0.018,27,0.022,28,0.018,62,1.725,63,2.177,64,3.651,65,4.337,66,4.337,67,4.337]],["title/classes/Article.html",[21,0.122,68,0.916]],["body/classes/Article.html",[3,0.189,4,0.164,5,0.164,7,0.241,10,1.402,11,0.028,12,0.869,15,1.645,16,0.375,20,0.189,21,0.089,26,0.01,27,0.015,28,0.01,68,0.999,69,0.772,70,2.03,71,1.239,72,1.476,73,1.715,74,3.181,75,3.181,76,1.997,77,3.629,78,3.181,79,2.845,80,3.181,81,0.869,82,1.6,83,1.779,84,2.845,85,3.528,86,3.21,87,2.411,88,2.657,89,2.411,90,2.371,91,3.032,92,2.411,93,3.528,94,3.181,95,2.411,96,2.845,97,2.411,98,2.411,99,2.411,100,2.154,101,2.411,102,2.411,103,3.181,104,2.411,105,1.034,106,2.03,107,2.03,108,3.528,109,2.377,110,2.657,111,3.629,112,1.034,113,1.779,114,2.411,115,2.411,116,2.411]],["title/controllers/ArticleController.html",[0,1.221,117,2.179]],["body/controllers/ArticleController.html",[0,0.917,2,0.917,3,0.194,4,0.169,5,0.169,7,0.248,8,1.36,10,1.163,11,0.028,12,0.721,14,1.793,16,0.44,17,0.553,20,0.194,21,0.091,22,1.831,23,1.15,24,1.793,26,0.01,27,0.015,28,0.01,68,1.021,73,1.464,81,0.721,117,2.428,118,2.089,119,1.638,120,3.691,121,2.428,122,3.691,123,3.679,124,2.481,125,2.9,126,2.894,127,2.481,128,2.08,129,1.668,130,2.08,131,3.097,132,2.671,133,2.481,134,3.201,135,2.481,136,5.178,137,2.089,138,2.9,139,3.097,140,2.481,141,3.097,142,2.481,143,3.201,144,3.679,145,2.481,146,3.691,147,2.201,148,2.481,149,2.481,150,2.428,151,2.089,152,1.831,153,2.031,154,2.089,155,1.15,156,2.089,157,2.481,158,2.481,159,2.481,160,2.481,161,2.481,162,2.481,163,2.481]],["title/modules/ArticleModule.html",[29,1.057,41,1.657]],["body/modules/ArticleModule.html",[2,1.613,3,0.246,4,0.214,5,0.214,11,0.028,16,0.472,17,0.7,20,0.246,21,0.116,26,0.013,27,0.018,28,0.013,29,1.603,31,1.349,32,1.349,33,1.579,34,1.579,35,1.349,36,2.513,37,2.513,41,3.203,42,2.722,45,3.21,46,2.189,47,1.579,48,1.579,50,2.608,52,2.076,53,1.881,54,1.251,58,2.648,68,0.873,117,3.305,152,2.32,153,2.981,154,2.648,164,2.648,165,2.648,166,2.648,167,3.145,168,3.145,169,3.145,170,3.145]],["title/injectables/ArticleService.html",[62,1.057,153,1.53]],["body/injectables/ArticleService.html",[3,0.14,4,0.122,5,0.122,7,0.179,8,1.059,11,0.028,12,0.707,14,1.65,15,1.23,16,0.43,17,0.399,20,0.14,21,0.066,23,1.326,24,1.65,26,0.007,27,0.012,28,0.007,54,0.713,62,0.917,63,0.9,68,1.238,72,1.054,73,0.713,74,1.322,76,1.326,78,1.322,79,1.183,81,0.707,82,1.418,100,1.712,105,0.769,112,1.228,113,1.322,121,1.89,125,2.441,128,2.04,129,1.637,130,2.04,131,1.509,132,2.403,152,1.322,153,1.326,155,0.83,156,2.41,171,1.509,172,3.53,173,2.863,174,2.41,175,2.863,176,2.863,177,1.564,178,1.792,179,2.441,180,2.142,181,2.728,182,1.792,183,2.863,184,2.863,185,1.792,186,2.863,187,1.792,188,1.712,189,2.41,190,2.41,191,1.792,192,2.863,193,1.792,194,2.863,195,2.694,196,1.792,197,1.792,198,1.792,199,1.322,200,1.183,201,1.183,202,2.863,203,1.792,204,1.953,205,1.792,206,1.792,207,1.792,208,1.792,209,2.41,210,2.441,211,2.359,212,1.792,213,1.792,214,1.792,215,2.41,216,3.009,217,2.637,218,1.89,219,1.792,220,2.41,221,1.792,222,1.509,223,1.792,224,1.792,225,1.792,226,1.792,227,1.509,228,1.792,229,1.792,230,1.792,231,2.863,232,1.792,233,1.792]],["title/classes/Author.html",[21,0.122,72,0.852]],["body/classes/Author.html",[3,0.205,4,0.178,5,0.178,7,0.262,10,1.404,11,0.028,12,0.87,15,1.711,16,0.39,20,0.205,21,0.096,26,0.011,27,0.016,28,0.011,68,1.469,69,0.838,71,1.316,72,0.988,74,3.337,75,3.337,76,2.095,77,3.808,80,3.337,81,0.87,82,1.141,84,2.985,85,2.823,86,2.975,88,2.823,90,2.452,91,3.808,93,3.671,94,3.337,96,2.985,103,3.337,106,2.204,107,2.204,108,3.337,109,2.526,111,4.189,112,1.123,129,1.556,222,2.204,234,2.204,235,3.808,236,3.808,237,2.617,238,2.617,239,2.617,240,2.617,241,2.617,242,2.617,243,2.617,244,2.617,245,1.123,246,2.204,247,2.617]],["title/controllers/AuthorController.html",[0,1.221,248,2.179]],["body/controllers/AuthorController.html",[0,1.08,2,1.08,3,0.229,4,0.199,5,0.199,7,0.292,8,1.531,10,1.154,11,0.028,12,0.715,14,1.779,16,0.433,17,0.65,20,0.229,21,0.108,22,2.155,23,1.353,24,1.779,26,0.012,27,0.017,28,0.012,72,1.069,73,1.647,81,0.616,105,1.252,119,1.928,120,4.05,121,3.454,122,4.05,126,3.175,128,1.776,129,1.424,130,1.776,132,2.659,137,2.459,138,3.129,139,3.486,141,3.486,146,2.459,147,1.466,150,2.733,151,2.459,155,1.353,180,2.063,200,1.928,248,2.733,249,2.459,250,2.92,251,3.129,252,2.92,253,3.486,254,2.92,255,2.92,256,2.459,257,2.459,258,2.92,259,2.92,260,2.92,261,2.92]],["title/modules/AuthorModule.html",[29,1.057,42,1.53]],["body/modules/AuthorModule.html",[2,1.741,3,0.276,4,0.239,5,0.239,11,0.028,16,0.463,17,0.784,20,0.276,21,0.13,26,0.014,27,0.019,28,0.014,29,1.699,31,1.509,32,1.509,33,1.767,34,1.767,35,1.509,36,2.664,37,2.664,42,2.875,46,2.364,47,1.767,48,1.767,50,2.104,53,2.104,54,1.4,72,0.908,180,2.811,248,3.502,257,2.963,262,2.963,263,2.963,264,2.963,265,3.519,266,2.963,267,3.519,268,3.519]],["title/injectables/AuthorService.html",[62,1.057,180,1.416]],["body/injectables/AuthorService.html",[3,0.22,4,0.191,5,0.191,7,0.281,8,1.488,11,0.028,12,0.764,14,1.74,16,0.426,17,0.625,20,0.22,21,0.103,24,1.74,26,0.011,27,0.016,28,0.011,54,1.116,62,1.288,63,1.408,72,1.326,76,1.3,81,0.699,82,1.402,112,1.203,121,3.392,128,2.018,129,1.618,130,2.018,132,2.624,155,1.3,172,3.105,174,3.388,177,1.533,179,3.073,180,1.726,190,3.388,200,1.852,201,1.852,204,1.533,209,2.362,210,2.406,211,1.852,215,2.362,216,2.362,217,2.07,218,1.852,220,2.362,227,2.362,251,3.073,253,2.362,256,2.362,266,2.362,269,2.362,270,4.024,271,2.805,272,2.805,273,4.024,274,4.024,275,2.805,276,2.805,277,2.805,278,2.805,279,2.805,280,2.805,281,2.805,282,2.805]],["title/classes/Comment.html",[21,0.122,90,1.53]],["body/classes/Comment.html",[3,0.237,4,0.206,5,0.206,7,0.302,10,1.275,11,0.028,12,0.79,15,1.459,16,0.384,20,0.237,21,0.111,26,0.012,27,0.017,28,0.012,68,1.688,69,0.968,71,1.459,72,1.57,73,1.95,76,2.271,81,0.79,82,1.73,83,3.13,84,2.8,85,4.13,86,3.47,88,2.23,90,1.966,96,3.235,105,1.297,108,3.13,109,2.8,110,3.616,112,1.297,245,1.297,283,2.545,284,3.023,285,3.023,286,3.023,287,3.023,288,3.023,289,3.023]],["title/controllers/CommentController.html",[0,1.221,290,2.179]],["body/controllers/CommentController.html",[0,1.317,2,1.317,3,0.279,4,0.242,5,0.242,7,0.356,8,1.755,10,0.855,11,0.028,12,0.53,14,1.317,16,0.446,17,0.793,20,0.279,21,0.131,23,1.651,24,1.317,26,0.015,27,0.019,28,0.015,68,0.988,73,1.889,81,0.53,90,2.473,119,2.352,126,3.524,128,1.528,129,1.225,130,1.528,132,2.199,150,3.133,155,1.651,177,1.946,204,1.946,245,1.528,290,3.133,291,2.999,292,3.562,293,3.562,294,3.405,295,3.562,296,2.999,297,2.916,298,2.999,299,3.562,300,3.562]],["title/modules/CommentModule.html",[29,1.057,43,1.974]],["body/modules/CommentModule.html",[2,1.617,3,0.247,4,0.215,5,0.215,11,0.028,16,0.472,17,0.703,20,0.247,21,0.116,26,0.013,27,0.018,28,0.013,29,1.606,31,1.354,32,1.354,33,1.585,34,1.585,35,1.354,36,2.518,37,2.518,41,2.953,42,2.725,43,3.817,46,2.195,47,1.585,48,1.585,50,2.614,52,2.083,53,1.887,54,1.256,55,2.329,90,1.462,290,3.311,297,3.517,298,2.657,301,2.657,302,3.156,303,2.657,304,2.657,305,3.156,306,2.657,307,3.156,308,3.156]],["title/injectables/CommentService.html",[62,1.057,297,1.804]],["body/injectables/CommentService.html",[3,0.215,4,0.187,5,0.187,7,0.274,8,1.464,11,0.028,12,0.589,14,1.014,16,0.465,17,0.611,20,0.215,21,0.101,23,1.834,24,1.014,26,0.011,27,0.016,28,0.011,54,1.091,62,1.267,63,1.377,68,1.289,72,1.199,73,1.091,76,1.271,81,0.589,82,1.18,90,2.152,112,1.176,128,1.698,129,1.362,130,1.698,132,1.834,153,2.684,155,1.271,172,3.066,177,2.163,179,3.041,180,2.485,199,2.024,201,1.81,204,2.538,210,3.041,211,3.066,245,1.176,246,2.309,294,3.041,296,2.309,297,2.163,306,2.309,309,2.309,310,3.959,311,2.743,312,2.743,313,3.959,314,3.959,315,2.743,316,2.309,317,2.743,318,2.743,319,2.743,320,2.743,321,2.743,322,2.743,323,2.743,324,2.743,325,2.743,326,2.743,327,2.743]],["title/classes/CreateArticleDto.html",[21,0.122,125,1.974]],["body/classes/CreateArticleDto.html",[3,0.27,4,0.235,5,0.235,7,0.345,10,1.26,11,0.028,12,0.781,15,1.933,16,0.411,20,0.27,21,0.193,26,0.014,27,0.019,28,0.014,69,1.104,71,1.598,72,1.559,73,2.09,79,3.466,81,0.872,82,1.565,105,1.479,125,2.777,328,4.731,329,2.544,330,2.062,331,3.448,332,2.777,333,3.448,334,3.448,335,2.777,336,2.821,337,3.14,338,1.479,339,1.479]],["title/classes/CreateAuthorDto.html",[21,0.122,251,1.974]],["body/classes/CreateAuthorDto.html",[3,0.307,4,0.267,5,0.267,7,0.392,10,1.213,11,0.027,12,0.752,15,2.033,16,0.396,20,0.307,21,0.206,26,0.016,27,0.021,28,0.016,69,1.255,71,1.739,81,0.752,129,1.924,236,4.709,251,3.023,332,3.023,336,2.808,337,3.345,338,1.682,339,1.682,340,4.709,341,3.301,342,3.921,343,3.921]],["title/classes/CreateCommentDto.html",[21,0.122,294,1.974]],["body/classes/CreateCommentDto.html",[3,0.258,4,0.224,5,0.224,7,0.329,10,1.23,11,0.028,12,0.762,15,1.547,16,0.432,20,0.258,21,0.189,26,0.013,27,0.018,28,0.013,68,1.653,69,1.053,71,1.547,72,1.538,73,2.04,81,0.886,82,1.776,105,1.411,245,1.411,294,2.69,330,2.69,332,1.967,335,3.065,336,2.766,337,2.69,338,1.411,339,1.411,344,4.639,345,2.77,346,3.289,347,3.289,348,3.289]],["title/classes/CreateOrDeleteLikeDto.html",[21,0.122,349,1.974]],["body/classes/CreateOrDeleteLikeDto.html",[3,0.275,4,0.238,5,0.238,7,0.351,10,1.126,11,0.028,12,0.698,16,0.443,20,0.275,21,0.195,26,0.014,27,0.019,28,0.014,68,1.684,69,1.122,71,1.615,72,1.567,81,0.877,82,1.809,105,1.503,245,1.503,330,2.808,335,3.166,336,2.658,338,1.503,339,1.503,349,2.808,350,4.458,351,2.95,352,3.504,353,3.504]],["title/classes/Like.html",[21,0.152]],["body/classes/Like.html",[3,0.231,4,0.201,5,0.201,7,0.295,10,1.261,11,0.028,12,0.782,16,0.379,20,0.231,21,0.109,26,0.012,27,0.017,28,0.012,68,1.677,69,0.945,71,1.435,72,1.56,75,3.569,80,3.569,81,0.782,82,1.567,83,3.077,84,2.753,93,3.879,94,3.569,96,1.947,103,3.569,105,1.265,109,2.753,110,3.569,112,1.265,129,1.435,245,1.265,354,2.484,355,5.257,356,4.17,357,4.17,358,2.95,359,4.17,360,2.95,361,2.95,362,2.95,363,4.837,364,2.95,365,2.95,366,2.753,367,2.95]],["title/controllers/LikeController.html",[0,1.221,368,2.179]],["body/controllers/LikeController.html",[0,1.18,2,1.18,3,0.25,4,0.217,5,0.217,7,0.319,8,1.629,10,1.057,11,0.028,12,0.655,14,1.629,16,0.426,17,0.711,20,0.25,21,0.118,23,1.479,24,1.629,26,0.013,27,0.018,28,0.013,68,0.885,81,0.655,119,2.107,126,2.107,128,1.89,129,1.516,130,1.89,132,2.521,150,3.993,155,1.479,177,1.744,204,1.744,245,1.369,349,3.618,368,2.908,369,2.687,370,3.192,371,5.045,372,3.192,373,4.406,374,3.192,375,3.192,376,4.406,377,3.192,378,2.756,379,2.687,380,2.687,381,2.687,382,3.192,383,3.192,384,3.192]],["title/modules/LikeModule.html",[29,1.057,44,1.974]],["body/modules/LikeModule.html",[2,1.621,3,0.248,4,0.215,5,0.215,11,0.028,16,0.473,17,0.706,20,0.248,21,0.117,26,0.013,27,0.018,28,0.013,29,1.609,31,1.359,32,1.359,33,1.59,34,1.59,35,1.359,36,2.523,37,2.523,41,2.957,42,2.729,44,3.82,46,2.201,47,1.59,48,1.59,50,2.621,52,2.091,53,1.894,54,1.261,55,2.337,368,3.317,378,3.52,379,2.667,385,2.667,386,3.168,387,2.667,388,2.667,389,3.168,390,2.667,391,3.168,392,3.168]],["title/injectables/LikeService.html",[62,1.057,378,1.804]],["body/injectables/LikeService.html",[3,0.196,4,0.17,5,0.17,7,0.25,8,1.369,11,0.028,12,0.655,14,1.369,16,0.453,17,0.557,20,0.196,21,0.092,23,1.715,24,1.369,26,0.01,27,0.015,28,0.01,54,0.996,62,1.185,63,1.257,68,1.223,81,0.655,82,1.313,112,1.073,128,1.89,129,1.516,130,1.89,132,2.256,153,2.608,155,1.16,172,3.592,177,2.023,179,2.912,180,2.415,199,1.847,200,1.652,201,1.652,204,2.407,210,2.912,211,3.431,217,1.847,218,1.652,245,1.073,316,2.107,349,3.367,378,2.023,380,2.107,381,2.107,390,2.107,393,2.107,394,3.702,395,3.702,396,2.503,397,2.503,398,3.702,399,3.702,400,2.503,401,3.702,402,2.503,403,2.503,404,2.503,405,2.503,406,3.702,407,2.503,408,2.503,409,2.503,410,3.702,411,3.702,412,2.503,413,2.503,414,2.503,415,1.847,416,2.503]],["title/modules/SharedModule.html",[29,1.057,45,1.804]],["body/modules/SharedModule.html",[3,0.304,4,0.264,5,0.264,11,0.027,16,0.394,17,0.865,20,0.304,21,0.143,26,0.016,27,0.021,28,0.016,29,1.783,31,1.666,32,1.666,33,1.95,34,1.95,35,1.666,36,2.796,37,2.796,45,3.473,46,2.523,47,1.95,48,1.95,181,3.633,417,3.271,418,3.271,419,3.271,420,3.885,421,3.885]],["title/injectables/StringsService.html",[62,1.057,181,1.804]],["body/injectables/StringsService.html",[3,0.295,4,0.256,5,0.256,7,0.377,8,1.821,11,0.028,12,0.56,14,1.393,15,2.077,16,0.295,17,0.839,20,0.295,21,0.139,24,2.029,26,0.015,27,0.02,28,0.015,62,1.577,63,1.891,81,0.56,128,1.615,129,1.295,130,1.615,181,2.69,188,2.252,210,2.252,422,3.171,423,4.924,424,4.924,425,3.766,426,3.766,427,3.766,428,5.819,429,3.766,430,3.766]],["title/classes/UpdateArticleDto.html",[21,0.122,195,2.179]],["body/classes/UpdateArticleDto.html",[3,0.235,4,0.204,5,0.204,7,0.3,10,1.339,11,0.028,12,0.83,15,1.822,16,0.383,20,0.235,21,0.18,26,0.012,27,0.017,28,0.012,69,0.961,71,1.452,72,1.494,73,1.943,76,2.262,78,3.603,79,3.223,81,0.918,82,1.84,105,1.287,195,2.787,329,2.215,330,2.92,332,2.524,335,3.168,336,2.907,337,2.92,338,1.287,339,1.287,431,4.875,432,3.002,433,3.002,434,3.002,435,3.002,436,3.002,437,2.527]],["title/classes/ValidIdDto.html",[21,0.122,138,1.974]],["body/classes/ValidIdDto.html",[3,0.319,4,0.277,5,0.277,7,0.407,10,0.976,11,0.027,12,0.605,16,0.405,20,0.319,21,0.21,26,0.017,27,0.021,28,0.017,69,1.303,71,1.781,76,2.637,81,0.846,82,1.697,138,3.095,147,2.599,330,2.433,335,3.095,336,2.599,338,1.745,339,1.745,438,3.095,439,3.426,440,4.069]],["title/classes/ValidSorted.html",[21,0.122,134,2.179]],["body/classes/ValidSorted.html",[3,0.302,4,0.262,5,0.262,7,0.385,10,0.924,11,0.028,12,0.572,16,0.391,20,0.391,21,0.204,26,0.016,27,0.02,28,0.016,69,1.233,71,1.718,81,0.825,82,1.653,86,2.302,100,2.302,134,3.297,147,2.508,189,4.669,338,1.651,339,1.651,366,2.541,415,2.841,437,4.206,438,2.987,441,2.841,442,3.85,443,3.85,444,3.242,445,3.85,446,3.85,447,3.242,448,3.85]],["title/classes/ValidValue.html",[21,0.122,143,2.179]],["body/classes/ValidValue.html",[3,0.322,4,0.279,5,0.279,7,0.411,10,0.986,11,0.027,12,0.611,15,1.791,16,0.408,20,0.322,21,0.211,26,0.017,27,0.021,28,0.017,69,1.315,71,1.791,81,0.774,143,3.438,147,2.614,188,3.419,332,2.457,336,2.614,337,3.114,338,1.762,339,1.762,438,3.114,444,3.459,449,3.459,450,4.108]],["title/coverage.html",[451,3.327]],["body/coverage.html",[0,1.948,1,1.707,5,0.176,6,2.177,11,0.027,18,1.413,21,0.229,26,0.011,27,0.016,28,0.011,35,1.109,59,1.908,62,1.763,64,2.177,68,0.717,70,2.177,72,0.667,81,0.384,90,1.198,100,3.974,117,1.707,118,2.177,125,1.546,134,1.707,138,1.546,143,1.707,147,2.255,153,1.198,171,2.177,180,1.109,181,1.413,195,1.707,218,1.707,234,2.177,248,1.707,249,2.177,251,1.546,269,2.177,283,2.177,290,1.707,291,2.177,294,1.546,297,1.413,309,2.177,328,2.177,329,2.798,340,2.177,341,2.177,344,2.177,345,2.177,349,1.546,350,2.177,351,2.177,354,2.177,368,1.707,369,2.177,378,1.413,393,2.177,422,2.177,431,2.177,438,2.686,439,2.177,441,1.908,449,2.177,451,1.908,452,2.586,453,2.586,454,2.586,455,2.177,456,2.586,457,3.792,458,5.689,459,4.947,460,2.586,461,2.586,462,4.947,463,2.586,464,2.586,465,4.947,466,2.177,467,2.586,468,2.586,469,2.586]],["title/dependencies.html",[32,1.703,470,2.755]],["body/dependencies.html",[11,0.028,17,0.933,21,0.194,26,0.017,27,0.022,28,0.017,32,1.796,54,1.667,112,1.796,338,1.796,339,1.796,471,5.769,472,4.188,473,4.188,474,4.188,475,4.188,476,4.188,477,4.188,478,4.188,479,4.188,480,4.188,481,3.526,482,4.188,483,4.188,484,4.188,485,4.188,486,4.188,487,4.188,488,4.188,489,4.188,490,4.188]],["title/miscellaneous/enumerations.html",[491,1.505,492,3.344]],["body/miscellaneous/enumerations.html",[7,0.472,11,0.026,26,0.019,27,0.023,28,0.019,86,2.821,100,2.821,147,2.848,188,3.392,366,3.114,415,3.481,438,2.821,441,4.185,447,4.776,491,2.578,492,3.972,493,4.718]],["title/miscellaneous/functions.html",[491,1.505,494,3.344]],["body/miscellaneous/functions.html",[7,0.502,11,0.024,26,0.021,27,0.024,28,0.021,35,2.678,466,4.228,491,2.743,494,4.228,495,5.022]],["title/index.html",[7,0.276,496,2.755,497,2.755]],["body/index.html",[4,0.229,11,0.027,26,0.014,27,0.019,28,0.014,72,0.869,179,2.013,451,2.484,498,3.367,499,3.367,500,4.57,501,3.367,502,3.367,503,3.367,504,3.367,505,3.367,506,3.367,507,3.367,508,5.188,509,3.367,510,3.367,511,3.367,512,6.136,513,3.367,514,3.367,515,3.367,516,5.999,517,3.367,518,3.367,519,4.57,520,3.367,521,3.367,522,3.367,523,3.367,524,4.57,525,4.57,526,3.367,527,3.367,528,3.367,529,4.57,530,4.57,531,3.367,532,3.367,533,3.367,534,3.367,535,3.367,536,2.835,537,3.367,538,3.367,539,3.367,540,3.367,541,3.367,542,3.367,543,3.367,544,3.367,545,3.367,546,3.367,547,3.367,548,3.367,549,3.367,550,3.367,551,3.367,552,3.367,553,3.367]],["title/modules.html",[31,1.934]],["body/modules.html",[11,0.022,26,0.018,27,0.022,28,0.018,30,2.922,31,1.898,41,2.222,42,2.051,43,2.647,44,2.647,45,2.418,536,5.437,554,6.458,555,6.458,556,6.458]],["title/overview.html",[557,3.797]],["body/overview.html",[2,0.983,11,0.027,18,2.493,26,0.011,27,0.016,28,0.011,29,0.851,30,4.192,31,1.14,32,1.14,33,1.334,34,1.334,35,1.14,36,1.334,37,1.334,38,2.238,39,2.238,40,2.238,41,3.133,42,2.777,43,3.642,44,3.642,45,3.134,46,1.943,47,1.334,48,1.334,63,1.334,69,0.851,153,2.658,164,2.238,165,2.238,166,2.238,180,2.461,181,3.134,262,2.238,263,2.238,264,2.238,297,3.134,301,2.238,303,2.238,304,2.238,378,3.134,385,2.238,387,2.238,388,2.238,417,2.238,418,2.238,419,2.238,557,2.238,558,3.869,559,2.658,560,2.658]],["title/miscellaneous/variables.html",[491,1.505,561,3.344]],["body/miscellaneous/variables.html",[7,0.434,11,0.027,26,0.018,27,0.022,28,0.018,59,3.975,81,0.801,113,3.2,188,2.593,235,3.651,366,2.863,455,4.536,481,3.651,491,2.369,561,3.651,562,4.337,563,4.337,564,4.337,565,4.337,566,4.337,567,4.337,568,4.337,569,4.337,570,4.337,571,4.337,572,4.337,573,4.337,574,4.337,575,4.337]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":100,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/ValidSorted.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.1.13",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":415,"title":{},"body":{"injectables/LikeService.html":{},"classes/ValidSorted.html":{},"miscellaneous/enumerations.html":{}}}],["12",{"_index":560,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":226,"title":{},"body":{"injectables/ArticleService.html":{}}}],["5",{"_index":559,"title":{},"body":{"overview.html":{}}}],["6",{"_index":558,"title":{},"body":{"overview.html":{}}}],["6.6.6",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":429,"title":{},"body":{"injectables/StringsService.html":{}}}],["__dirname",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addcomment",{"_index":310,"title":{},"body":{"injectables/CommentService.html":{}}}],["addcomment(comment",{"_index":314,"title":{},"body":{"injectables/CommentService.html":{}}}],["amazing",{"_index":537,"title":{},"body":{"index.html":{}}}],["app",{"_index":514,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":506,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["article",{"_index":68,"title":{"classes/Article.html":{}},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"coverage.html":{}}}],["article.author",{"_index":222,"title":{},"body":{"injectables/ArticleService.html":{},"classes/Author.html":{}}}],["article.comments",{"_index":289,"title":{},"body":{"classes/Comment.html":{}}}],["article.comments.push",{"_index":324,"title":{},"body":{"injectables/CommentService.html":{}}}],["article.controller",{"_index":169,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.dto",{"_index":156,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["article.dto.ts",{"_index":329,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":434,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:13",{"_index":334,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:14",{"_index":436,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:17",{"_index":333,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:18",{"_index":433,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:22",{"_index":331,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:23",{"_index":435,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:28",{"_index":432,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.entity",{"_index":152,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{}}}],["article.likes",{"_index":367,"title":{},"body":{"classes/Like.html":{}}}],["article.likescount",{"_index":410,"title":{},"body":{"injectables/LikeService.html":{}}}],["article.service",{"_index":154,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article/article.entity",{"_index":245,"title":{},"body":{"classes/Author.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["article/article.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{}}}],["article/article.service",{"_index":316,"title":{},"body":{"injectables/CommentService.html":{},"injectables/LikeService.html":{}}}],["article/comment",{"_index":292,"title":{},"body":{"controllers/CommentController.html":{}}}],["article/like",{"_index":370,"title":{},"body":{"controllers/LikeController.html":{}}}],["articlecontroller",{"_index":117,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articleid",{"_index":357,"title":{},"body":{"classes/Like.html":{}}}],["articlemodule",{"_index":41,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules.html":{},"overview.html":{}}}],["articlerepo",{"_index":183,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articles",{"_index":235,"title":{},"body":{"classes/Author.html":{},"miscellaneous/variables.html":{}}}],["articleservice",{"_index":153,"title":{"injectables/ArticleService.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":172,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{}}}],["author",{"_index":72,"title":{"classes/Author.html":{}},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{},"index.html":{}}}],["author.articles",{"_index":114,"title":{},"body":{"classes/Article.html":{}}}],["author.comments",{"_index":288,"title":{},"body":{"classes/Comment.html":{}}}],["author.controller",{"_index":267,"title":{},"body":{"modules/AuthorModule.html":{}}}],["author.dto",{"_index":256,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["author.dto.ts",{"_index":341,"title":{},"body":{"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["author.dto.ts:11",{"_index":343,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.dto.ts:14",{"_index":342,"title":{},"body":{"classes/CreateAuthorDto.html":{}}}],["author.entity",{"_index":266,"title":{},"body":{"modules/AuthorModule.html":{},"injectables/AuthorService.html":{}}}],["author.likes",{"_index":365,"title":{},"body":{"classes/Like.html":{}}}],["author.service",{"_index":257,"title":{},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{}}}],["author/author.entity",{"_index":105,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"classes/UpdateArticleDto.html":{}}}],["author/author.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{}}}],["author/author.service",{"_index":199,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{}}}],["authorcontroller",{"_index":248,"title":{"controllers/AuthorController.html":{}},"body":{"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"coverage.html":{}}}],["authorid",{"_index":359,"title":{},"body":{"classes/Like.html":{}}}],["authormodule",{"_index":42,"title":{"modules/AuthorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules.html":{},"overview.html":{}}}],["authorrepo",{"_index":273,"title":{},"body":{"injectables/AuthorService.html":{}}}],["authorservice",{"_index":180,"title":{"injectables/AuthorService.html":{}},"body":{"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":211,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{}}}],["backers",{"_index":538,"title":{},"body":{"index.html":{}}}],["body",{"_index":73,"title":{},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/UpdateArticleDto.html":{}}}],["bool.dto",{"_index":148,"title":{},"body":{"controllers/ArticleController.html":{}}}],["bool.dto.ts",{"_index":441,"title":{},"body":{"classes/ValidSorted.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["bool.dto.ts:13",{"_index":443,"title":{},"body":{"classes/ValidSorted.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":556,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":554,"title":{},"body":{"modules.html":{}}}],["building",{"_index":501,"title":{},"body":{"index.html":{}}}],["catch",{"_index":215,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{}}}],["char",{"_index":428,"title":{},"body":{"injectables/StringsService.html":{}}}],["class",{"_index":21,"title":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":69,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":164,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_exports",{"_index":165,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_imports",{"_index":167,"title":{},"body":{"modules/ArticleModule.html":{}}}],["cluster_articlemodule_providers",{"_index":166,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_authormodule",{"_index":262,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_authormodule_exports",{"_index":263,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_authormodule_providers",{"_index":264,"title":{},"body":{"modules/AuthorModule.html":{},"overview.html":{}}}],["cluster_commentmodule",{"_index":301,"title":{},"body":{"modules/CommentModule.html":{},"overview.html":{}}}],["cluster_commentmodule_exports",{"_index":304,"title":{},"body":{"modules/CommentModule.html":{},"overview.html":{}}}],["cluster_commentmodule_imports",{"_index":302,"title":{},"body":{"modules/CommentModule.html":{}}}],["cluster_commentmodule_providers",{"_index":303,"title":{},"body":{"modules/CommentModule.html":{},"overview.html":{}}}],["cluster_likemodule",{"_index":385,"title":{},"body":{"modules/LikeModule.html":{},"overview.html":{}}}],["cluster_likemodule_exports",{"_index":388,"title":{},"body":{"modules/LikeModule.html":{},"overview.html":{}}}],["cluster_likemodule_imports",{"_index":386,"title":{},"body":{"modules/LikeModule.html":{}}}],["cluster_likemodule_providers",{"_index":387,"title":{},"body":{"modules/LikeModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":417,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":419,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":418,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["column",{"_index":108,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{}}}],["column({default",{"_index":99,"title":{},"body":{"classes/Article.html":{}}}],["column({nullable",{"_index":88,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{}}}],["comment",{"_index":90,"title":{"classes/Comment.html":{}},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"coverage.html":{}}}],["comment(param",{"_index":293,"title":{},"body":{"controllers/CommentController.html":{}}}],["comment.article",{"_index":115,"title":{},"body":{"classes/Article.html":{}}}],["comment.author",{"_index":246,"title":{},"body":{"classes/Author.html":{},"injectables/CommentService.html":{}}}],["comment.controller",{"_index":307,"title":{},"body":{"modules/CommentModule.html":{}}}],["comment.dto",{"_index":296,"title":{},"body":{"controllers/CommentController.html":{},"injectables/CommentService.html":{}}}],["comment.dto.ts",{"_index":345,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["comment.dto.ts:14",{"_index":348,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.dto.ts:19",{"_index":347,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.dto.ts:24",{"_index":346,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.entity",{"_index":306,"title":{},"body":{"modules/CommentModule.html":{},"injectables/CommentService.html":{}}}],["comment.service",{"_index":298,"title":{},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{}}}],["comment/comment.entity",{"_index":107,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{}}}],["comment/comment.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["commentcontroller",{"_index":290,"title":{"controllers/CommentController.html":{}},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{},"coverage.html":{}}}],["commentmodule",{"_index":43,"title":{"modules/CommentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommentModule.html":{},"modules.html":{},"overview.html":{}}}],["commentrepo",{"_index":313,"title":{},"body":{"injectables/CommentService.html":{}}}],["comments",{"_index":74,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{}}}],["comments.author",{"_index":214,"title":{},"body":{"injectables/ArticleService.html":{}}}],["commentservice",{"_index":297,"title":{"injectables/CommentService.html":{}},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"coverage.html":{},"overview.html":{}}}],["config",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conflictexception",{"_index":403,"title":{},"body":{"injectables/LikeService.html":{}}}],["conflictexception(`can't",{"_index":416,"title":{},"body":{"injectables/LikeService.html":{}}}],["const",{"_index":210,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}}}],["constructor",{"_index":177,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["constructor(@injectrepository(author",{"_index":278,"title":{},"body":{"injectables/AuthorService.html":{}}}],["constructor(articlerepo",{"_index":178,"title":{},"body":{"injectables/ArticleService.html":{}}}],["constructor(authorrepo",{"_index":271,"title":{},"body":{"injectables/AuthorService.html":{}}}],["constructor(commentrepo",{"_index":311,"title":{},"body":{"injectables/CommentService.html":{}}}],["constructor(likerepo",{"_index":396,"title":{},"body":{"injectables/LikeService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/AuthorController.html":{},"controllers/CommentController.html":{},"controllers/LikeController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/AuthorController.html":{},"controllers/CommentController.html":{},"controllers/LikeController.html":{},"coverage.html":{}}}],["controller('article",{"_index":157,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller('article/comment",{"_index":299,"title":{},"body":{"controllers/CommentController.html":{}}}],["controller('article/like",{"_index":382,"title":{},"body":{"controllers/LikeController.html":{}}}],["controller('author",{"_index":258,"title":{},"body":{"controllers/AuthorController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"overview.html":{}}}],["coverage",{"_index":451,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":120,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["create(newarticle",{"_index":124,"title":{},"body":{"controllers/ArticleController.html":{}}}],["create(newauthor",{"_index":250,"title":{},"body":{"controllers/AuthorController.html":{}}}],["createarticle",{"_index":173,"title":{},"body":{"injectables/ArticleService.html":{}}}],["createarticle(article",{"_index":184,"title":{},"body":{"injectables/ArticleService.html":{}}}],["createarticledto",{"_index":125,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["createauthor",{"_index":270,"title":{},"body":{"injectables/AuthorService.html":{}}}],["createauthor(author",{"_index":274,"title":{},"body":{"injectables/AuthorService.html":{}}}],["createauthordto",{"_index":251,"title":{"classes/CreateAuthorDto.html":{}},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["createcommentdto",{"_index":294,"title":{"classes/CreateCommentDto.html":{}},"body":{"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["created_at",{"_index":75,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Like.html":{}}}],["createdatecolumn",{"_index":94,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Like.html":{}}}],["createordeletelikedto",{"_index":349,"title":{"classes/CreateOrDeleteLikeDto.html":{}},"body":{"classes/CreateOrDeleteLikeDto.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"coverage.html":{}}}],["database",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":93,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Like.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{}}}],["default",{"_index":113,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{}}}],["delete",{"_index":380,"title":{},"body":{"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["delete('/:author/:article",{"_index":376,"title":{},"body":{"controllers/LikeController.html":{}}}],["deletedresult",{"_index":412,"title":{},"body":{"injectables/LikeService.html":{}}}],["deletedresult.affected",{"_index":414,"title":{},"body":{"injectables/LikeService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":207,"title":{},"body":{"injectables/ArticleService.html":{}}}],["description",{"_index":507,"title":{},"body":{"index.html":{}}}],["development",{"_index":515,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":155,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["dto/is",{"_index":146,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["dto/update",{"_index":197,"title":{},"body":{"injectables/ArticleService.html":{}}}],["e2e",{"_index":526,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":502,"title":{},"body":{"index.html":{}}}],["entities",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":109,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/Like.html":{}}}],["entity{.ts,.js",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":446,"title":{},"body":{"classes/ValidSorted.html":{}}}],["enumerations",{"_index":492,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":216,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{}}}],["error.status",{"_index":225,"title":{},"body":{"injectables/ArticleService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":86,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/ValidSorted.html":{},"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{}}}],["findmanyoptions",{"_index":202,"title":{},"body":{"injectables/ArticleService.html":{}}}],["flag",{"_index":447,"title":{},"body":{"classes/ValidSorted.html":{},"miscellaneous/enumerations.html":{}}}],["found",{"_index":220,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{}}}],["framework",{"_index":500,"title":{},"body":{"index.html":{}}}],["function",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":494,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":139,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["get('/search",{"_index":144,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getall",{"_index":121,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["getall(@query",{"_index":159,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getall(query",{"_index":133,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getall(sorted",{"_index":186,"title":{},"body":{"injectables/ArticleService.html":{}}}],["getbyid",{"_index":122,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["getbyid(params",{"_index":137,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getonebyid",{"_index":174,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{}}}],["getonebyid(id",{"_index":190,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{}}}],["getting",{"_index":496,"title":{"index.html":{}},"body":{}}],["grow",{"_index":533,"title":{},"body":{"index.html":{}}}],["handeldcharacters",{"_index":228,"title":{},"body":{"injectables/ArticleService.html":{}}}],["handlequeryspecialchar",{"_index":423,"title":{},"body":{"injectables/StringsService.html":{}}}],["handlequeryspecialchar(value",{"_index":424,"title":{},"body":{"injectables/StringsService.html":{}}}],["hello",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":544,"title":{},"body":{"index.html":{}}}],["host",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":550,"title":{},"body":{"index.html":{}}}],["id",{"_index":76,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{}}}],["id.dto",{"_index":151,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["id.dto.ts",{"_index":439,"title":{},"body":{"classes/ValidIdDto.html":{},"coverage.html":{}}}],["id.dto.ts:7",{"_index":440,"title":{},"body":{"classes/ValidIdDto.html":{}}}],["identifier",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":201,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{}}}],["injectrepository(article",{"_index":203,"title":{},"body":{"injectables/ArticleService.html":{}}}],["injectrepository(comment",{"_index":317,"title":{},"body":{"injectables/CommentService.html":{}}}],["injectrepository(like",{"_index":404,"title":{},"body":{"injectables/LikeService.html":{}}}],["installation",{"_index":511,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":513,"title":{},"body":{"index.html":{}}}],["isboolean",{"_index":444,"title":{},"body":{"classes/ValidSorted.html":{},"classes/ValidValue.html":{}}}],["isenum",{"_index":445,"title":{},"body":{"classes/ValidSorted.html":{}}}],["isenum(flag",{"_index":448,"title":{},"body":{"classes/ValidSorted.html":{}}}],["isint",{"_index":335,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{}}}],["isnotempty",{"_index":336,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidValue.html":{}}}],["isnotempty()@isstring",{"_index":332,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidValue.html":{}}}],["isnotempty()@type(undefined)@isint",{"_index":330,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{}}}],["isoptional",{"_index":437,"title":{},"body":{"classes/UpdateArticleDto.html":{},"classes/ValidSorted.html":{}}}],["isoptional()@type(undefined)@isenum(flag",{"_index":442,"title":{},"body":{"classes/ValidSorted.html":{}}}],["isstring",{"_index":337,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidValue.html":{}}}],["jobtitle",{"_index":236,"title":{},"body":{"classes/Author.html":{},"classes/CreateAuthorDto.html":{}}}],["join",{"_index":540,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":363,"title":{},"body":{"classes/Like.html":{}}}],["kamil",{"_index":547,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["license",{"_index":553,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":530,"title":{},"body":{"index.html":{}}}],["like(`%${handeldcharacters",{"_index":231,"title":{},"body":{"injectables/ArticleService.html":{}}}],["like(param",{"_index":372,"title":{},"body":{"controllers/LikeController.html":{}}}],["like.article",{"_index":116,"title":{},"body":{"classes/Article.html":{}}}],["like.author",{"_index":247,"title":{},"body":{"classes/Author.html":{}}}],["like.controller",{"_index":391,"title":{},"body":{"modules/LikeModule.html":{}}}],["like.dto",{"_index":381,"title":{},"body":{"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["like.dto.ts",{"_index":351,"title":{},"body":{"classes/CreateOrDeleteLikeDto.html":{},"coverage.html":{}}}],["like.dto.ts:14",{"_index":353,"title":{},"body":{"classes/CreateOrDeleteLikeDto.html":{}}}],["like.dto.ts:18",{"_index":352,"title":{},"body":{"classes/CreateOrDeleteLikeDto.html":{}}}],["like.entity",{"_index":390,"title":{},"body":{"modules/LikeModule.html":{},"injectables/LikeService.html":{}}}],["like.service",{"_index":379,"title":{},"body":{"controllers/LikeController.html":{},"modules/LikeModule.html":{}}}],["like/like.entity",{"_index":106,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{}}}],["like/like.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["likearticle",{"_index":394,"title":{},"body":{"injectables/LikeService.html":{}}}],["likearticle(like",{"_index":399,"title":{},"body":{"injectables/LikeService.html":{}}}],["likecontroller",{"_index":368,"title":{"controllers/LikeController.html":{}},"body":{"controllers/LikeController.html":{},"modules/LikeModule.html":{},"coverage.html":{}}}],["likemodule",{"_index":44,"title":{"modules/LikeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LikeModule.html":{},"modules.html":{},"overview.html":{}}}],["likerepo",{"_index":398,"title":{},"body":{"injectables/LikeService.html":{}}}],["likes",{"_index":77,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{}}}],["likescount",{"_index":78,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/UpdateArticleDto.html":{}}}],["likeservice",{"_index":378,"title":{"injectables/LikeService.html":{}},"body":{"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"coverage.html":{},"overview.html":{}}}],["localhost",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manytoone",{"_index":110,"title":{},"body":{"classes/Article.html":{},"classes/Comment.html":{},"classes/Like.html":{}}}],["manytoone(undefined",{"_index":83,"title":{},"body":{"classes/Article.html":{},"classes/Comment.html":{},"classes/Like.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}}}],["miscellaneous",{"_index":491,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":529,"title":{},"body":{"index.html":{}}}],["mode",{"_index":519,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":543,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":481,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mysqlconnectionoptions",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":548,"title":{},"body":{"index.html":{}}}],["name",{"_index":129,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateAuthorDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}}}],["nest",{"_index":508,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":552,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"dependencies.html":{}}}],["new",{"_index":218,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/LikeService.html":{},"coverage.html":{}}}],["newarticle",{"_index":131,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["newauthor",{"_index":253,"title":{},"body":{"controllers/AuthorController.html":{},"injectables/AuthorService.html":{}}}],["newcomment",{"_index":320,"title":{},"body":{"injectables/CommentService.html":{}}}],["newlike",{"_index":407,"title":{},"body":{"injectables/LikeService.html":{}}}],["newvalue",{"_index":426,"title":{},"body":{"injectables/StringsService.html":{}}}],["newvalue.join",{"_index":430,"title":{},"body":{"injectables/StringsService.html":{}}}],["node.js",{"_index":499,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":200,"title":{},"body":{"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"injectables/LikeService.html":{}}}],["notfoundexception('article",{"_index":219,"title":{},"body":{"injectables/ArticleService.html":{}}}],["notfoundexception('author",{"_index":227,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{}}}],["npm",{"_index":512,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":85,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{}}}],["number",{"_index":82,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"injectables/LikeService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{}}}],["onetomany",{"_index":111,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{}}}],["onetomany(undefined",{"_index":91,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{}}}],["open",{"_index":531,"title":{},"body":{"index.html":{}}}],["optional",{"_index":130,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}}}],["ormconfig",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["ormconfig.ts",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["overview",{"_index":557,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":470,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":150,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{},"controllers/CommentController.html":{},"controllers/LikeController.html":{}}}],["parameters",{"_index":128,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}}}],["params",{"_index":141,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{}}}],["password",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":541,"title":{},"body":{"index.html":{}}}],["port",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":126,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{},"controllers/CommentController.html":{},"controllers/LikeController.html":{}}}],["post('/:author/:article",{"_index":373,"title":{},"body":{"controllers/LikeController.html":{}}}],["prefix",{"_index":119,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{},"controllers/CommentController.html":{},"controllers/LikeController.html":{}}}],["primary",{"_index":355,"title":{},"body":{"classes/Like.html":{}}}],["primarycolumn",{"_index":364,"title":{},"body":{"classes/Like.html":{}}}],["primarygeneratedcolumn",{"_index":96,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/Like.html":{}}}],["private",{"_index":204,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["production",{"_index":521,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":498,"title":{},"body":{"index.html":{}}}],["project",{"_index":532,"title":{},"body":{"index.html":{}}}],["promise",{"_index":132,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["properties",{"_index":71,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["query",{"_index":136,"title":{},"body":{"controllers/ArticleController.html":{}}}],["queryobject",{"_index":205,"title":{},"body":{"injectables/ArticleService.html":{}}}],["queryobject.order",{"_index":206,"title":{},"body":{"injectables/ArticleService.html":{}}}],["read",{"_index":542,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{}}}],["reflect",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":213,"title":{},"body":{"injectables/ArticleService.html":{}}}],["repository",{"_index":179,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/CommentService.html":{},"injectables/LikeService.html":{},"index.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{}}}],["rimraf",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":516,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["savedcomment",{"_index":322,"title":{},"body":{"injectables/CommentService.html":{}}}],["savedcomment.author",{"_index":327,"title":{},"body":{"injectables/CommentService.html":{}}}],["savedcomment.body",{"_index":326,"title":{},"body":{"injectables/CommentService.html":{}}}],["savedcomment.id",{"_index":325,"title":{},"body":{"injectables/CommentService.html":{}}}],["scalable",{"_index":503,"title":{},"body":{"index.html":{}}}],["search",{"_index":123,"title":{},"body":{"controllers/ArticleController.html":{}}}],["search(@query",{"_index":161,"title":{},"body":{"controllers/ArticleController.html":{}}}],["search(query",{"_index":142,"title":{},"body":{"controllers/ArticleController.html":{}}}],["searcharticles",{"_index":175,"title":{},"body":{"injectables/ArticleService.html":{}}}],["searcharticles(value",{"_index":192,"title":{},"body":{"injectables/ArticleService.html":{}}}],["server",{"_index":504,"title":{},"body":{"index.html":{}}}],["shared/shared.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{}}}],["shared/strings/strings.service",{"_index":198,"title":{},"body":{"injectables/ArticleService.html":{}}}],["sharedmodule",{"_index":45,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":505,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":189,"title":{},"body":{"injectables/ArticleService.html":{},"classes/ValidSorted.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"modules/AuthorModule.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"modules/LikeModule.html":{},"injectables/LikeService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"index.html":{}}}],["sponsors",{"_index":535,"title":{},"body":{"index.html":{}}}],["src/.../is",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/article/article.controller.ts",{"_index":118,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/article/article.controller.ts:15",{"_index":127,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:23",{"_index":135,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:28",{"_index":145,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:33",{"_index":140,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.entity.ts",{"_index":70,"title":{},"body":{"classes/Article.html":{},"coverage.html":{}}}],["src/article/article.entity.ts:12",{"_index":102,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:15",{"_index":89,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:18",{"_index":101,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:21",{"_index":87,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:24",{"_index":92,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:27",{"_index":98,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:30",{"_index":95,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:33",{"_index":104,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.entity.ts:9",{"_index":97,"title":{},"body":{"classes/Article.html":{}}}],["src/article/article.module.ts",{"_index":168,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.service.ts",{"_index":171,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/article/article.service.ts:13",{"_index":182,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:21",{"_index":187,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:31",{"_index":191,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:45",{"_index":185,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:61",{"_index":193,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:71",{"_index":196,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/dto/create",{"_index":328,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/article/dto/update",{"_index":431,"title":{},"body":{"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["src/author/author.controller.ts",{"_index":249,"title":{},"body":{"controllers/AuthorController.html":{},"coverage.html":{}}}],["src/author/author.controller.ts:12",{"_index":252,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.controller.ts:20",{"_index":254,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.controller.ts:25",{"_index":255,"title":{},"body":{"controllers/AuthorController.html":{}}}],["src/author/author.entity.ts",{"_index":234,"title":{},"body":{"classes/Author.html":{},"coverage.html":{}}}],["src/author/author.entity.ts:10",{"_index":240,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.entity.ts:13",{"_index":243,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.entity.ts:16",{"_index":241,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.entity.ts:19",{"_index":237,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.entity.ts:22",{"_index":238,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.entity.ts:25",{"_index":242,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.entity.ts:28",{"_index":239,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.entity.ts:31",{"_index":244,"title":{},"body":{"classes/Author.html":{}}}],["src/author/author.module.ts",{"_index":265,"title":{},"body":{"modules/AuthorModule.html":{}}}],["src/author/author.service.ts",{"_index":269,"title":{},"body":{"injectables/AuthorService.html":{},"coverage.html":{}}}],["src/author/author.service.ts:12",{"_index":276,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/author.service.ts:16",{"_index":277,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/author.service.ts:25",{"_index":275,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/author.service.ts:8",{"_index":272,"title":{},"body":{"injectables/AuthorService.html":{}}}],["src/author/dto/create",{"_index":340,"title":{},"body":{"classes/CreateAuthorDto.html":{},"coverage.html":{}}}],["src/comment/comment.controller.ts",{"_index":291,"title":{},"body":{"controllers/CommentController.html":{},"coverage.html":{}}}],["src/comment/comment.controller.ts:13",{"_index":295,"title":{},"body":{"controllers/CommentController.html":{}}}],["src/comment/comment.entity.ts",{"_index":283,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/comment/comment.entity.ts:11",{"_index":286,"title":{},"body":{"classes/Comment.html":{}}}],["src/comment/comment.entity.ts:14",{"_index":285,"title":{},"body":{"classes/Comment.html":{}}}],["src/comment/comment.entity.ts:17",{"_index":284,"title":{},"body":{"classes/Comment.html":{}}}],["src/comment/comment.entity.ts:8",{"_index":287,"title":{},"body":{"classes/Comment.html":{}}}],["src/comment/comment.module.ts",{"_index":305,"title":{},"body":{"modules/CommentModule.html":{}}}],["src/comment/comment.service.ts",{"_index":309,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/comment/comment.service.ts:11",{"_index":312,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/comment/comment.service.ts:19",{"_index":315,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/comment/dto/create",{"_index":344,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["src/dto/is",{"_index":438,"title":{},"body":{"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/like/dto/create",{"_index":350,"title":{},"body":{"classes/CreateOrDeleteLikeDto.html":{},"coverage.html":{}}}],["src/like/like.controller.ts",{"_index":369,"title":{},"body":{"controllers/LikeController.html":{},"coverage.html":{}}}],["src/like/like.controller.ts:13",{"_index":374,"title":{},"body":{"controllers/LikeController.html":{}}}],["src/like/like.controller.ts:21",{"_index":377,"title":{},"body":{"controllers/LikeController.html":{}}}],["src/like/like.entity.ts",{"_index":354,"title":{},"body":{"classes/Like.html":{},"coverage.html":{}}}],["src/like/like.entity.ts:10",{"_index":360,"title":{},"body":{"classes/Like.html":{}}}],["src/like/like.entity.ts:14",{"_index":358,"title":{},"body":{"classes/Like.html":{}}}],["src/like/like.entity.ts:17",{"_index":361,"title":{},"body":{"classes/Like.html":{}}}],["src/like/like.entity.ts:20",{"_index":362,"title":{},"body":{"classes/Like.html":{}}}],["src/like/like.module.ts",{"_index":389,"title":{},"body":{"modules/LikeModule.html":{}}}],["src/like/like.service.ts",{"_index":393,"title":{},"body":{"injectables/LikeService.html":{},"coverage.html":{}}}],["src/like/like.service.ts:11",{"_index":397,"title":{},"body":{"injectables/LikeService.html":{}}}],["src/like/like.service.ts:19",{"_index":400,"title":{},"body":{"injectables/LikeService.html":{}}}],["src/like/like.service.ts:28",{"_index":402,"title":{},"body":{"injectables/LikeService.html":{}}}],["src/main.ts",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/shared.module.ts",{"_index":420,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/strings/strings.service.ts",{"_index":422,"title":{},"body":{"injectables/StringsService.html":{},"coverage.html":{}}}],["src/shared/strings/strings.service.ts:6",{"_index":425,"title":{},"body":{"injectables/StringsService.html":{}}}],["start",{"_index":517,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":520,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":522,"title":{},"body":{"index.html":{}}}],["started",{"_index":497,"title":{"index.html":{}},"body":{}}],["starter",{"_index":510,"title":{},"body":{"index.html":{}}}],["statements",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":545,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidValue.html":{}}}],["string.dto",{"_index":149,"title":{},"body":{"controllers/ArticleController.html":{}}}],["string.dto.ts",{"_index":449,"title":{},"body":{"classes/ValidValue.html":{},"coverage.html":{}}}],["string.dto.ts:6",{"_index":450,"title":{},"body":{"classes/ValidValue.html":{}}}],["strings/strings.service",{"_index":421,"title":{},"body":{"modules/SharedModule.html":{}}}],["stringsservice",{"_index":181,"title":{"injectables/StringsService.html":{}},"body":{"injectables/ArticleService.html":{},"modules/SharedModule.html":{},"injectables/StringsService.html":{},"coverage.html":{},"overview.html":{}}}],["support",{"_index":536,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":555,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":525,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":528,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":527,"title":{},"body":{"index.html":{}}}],["tests",{"_index":524,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":534,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlerepo.create(article",{"_index":223,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepo.find",{"_index":230,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepo.find(queryobject",{"_index":208,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepo.findoneorfail",{"_index":212,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepo.save(article",{"_index":233,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepo.save(newarticle",{"_index":224,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articleservice.createarticle(newarticle",{"_index":158,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.getall(query.sorted",{"_index":160,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.getonebyid(comment.article",{"_index":319,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.articleservice.getonebyid(like.article",{"_index":406,"title":{},"body":{"injectables/LikeService.html":{}}}],["this.articleservice.getonebyid(params.id",{"_index":163,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.searcharticles(query.value",{"_index":162,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.updatearticle(article",{"_index":411,"title":{},"body":{"injectables/LikeService.html":{}}}],["this.authorrepo.create(author",{"_index":281,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.authorrepo.find",{"_index":279,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.authorrepo.findoneorfail(id",{"_index":280,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.authorrepo.save(newauthor",{"_index":282,"title":{},"body":{"injectables/AuthorService.html":{}}}],["this.authorservice.createauthor(newauthor",{"_index":259,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.getall",{"_index":260,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.authorservice.getonebyid(article.author",{"_index":221,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.authorservice.getonebyid(comment.author",{"_index":318,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.authorservice.getonebyid(like.author",{"_index":405,"title":{},"body":{"injectables/LikeService.html":{}}}],["this.authorservice.getonebyid(params.id",{"_index":261,"title":{},"body":{"controllers/AuthorController.html":{}}}],["this.commentrepo.create(comment",{"_index":321,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.commentrepo.save(newcomment",{"_index":323,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.commentservice.addcomment(param",{"_index":300,"title":{},"body":{"controllers/CommentController.html":{}}}],["this.getonebyid(article.id",{"_index":232,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.likerepo.create(like",{"_index":408,"title":{},"body":{"injectables/LikeService.html":{}}}],["this.likerepo.delete(like",{"_index":413,"title":{},"body":{"injectables/LikeService.html":{}}}],["this.likerepo.save(newlike",{"_index":409,"title":{},"body":{"injectables/LikeService.html":{}}}],["this.likeservice.likearticle(param",{"_index":383,"title":{},"body":{"controllers/LikeController.html":{}}}],["this.likeservice.unlikearticle(param",{"_index":384,"title":{},"body":{"controllers/LikeController.html":{}}}],["this.stringsservice.handlequeryspecialchar(value",{"_index":229,"title":{},"body":{"injectables/ArticleService.html":{}}}],["throw",{"_index":217,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{},"injectables/LikeService.html":{}}}],["title",{"_index":79,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["touch",{"_index":546,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":339,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"dependencies.html":{}}}],["true",{"_index":366,"title":{},"body":{"classes/Like.html":{},"classes/ValidSorted.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["true})@joincolumn({name",{"_index":356,"title":{},"body":{"classes/Like.html":{}}}],["try",{"_index":209,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthorService.html":{}}}],["twitter",{"_index":551,"title":{},"body":{"index.html":{}}}],["type",{"_index":81,"title":{},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"controllers/AuthorController.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/Like.html":{},"controllers/LikeController.html":{},"injectables/LikeService.html":{},"injectables/StringsService.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":112,"title":{},"body":{"classes/Article.html":{},"injectables/ArticleService.html":{},"classes/Author.html":{},"injectables/AuthorService.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"classes/Like.html":{},"injectables/LikeService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{}}}],["typeormmodule.forfeature([article",{"_index":170,"title":{},"body":{"modules/ArticleModule.html":{}}}],["typeormmodule.forfeature([author",{"_index":268,"title":{},"body":{"modules/AuthorModule.html":{}}}],["typeormmodule.forfeature([comment",{"_index":308,"title":{},"body":{"modules/CommentModule.html":{}}}],["typeormmodule.forfeature([like",{"_index":392,"title":{},"body":{"modules/LikeModule.html":{}}}],["typeormmodule.forroot(config",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":509,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":84,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Comment.html":{},"classes/Like.html":{}}}],["unit",{"_index":523,"title":{},"body":{"index.html":{}}}],["unlike",{"_index":371,"title":{},"body":{"controllers/LikeController.html":{}}}],["unlike(param",{"_index":375,"title":{},"body":{"controllers/LikeController.html":{}}}],["unlikearticle",{"_index":395,"title":{},"body":{"injectables/LikeService.html":{}}}],["unlikearticle(like",{"_index":401,"title":{},"body":{"injectables/LikeService.html":{}}}],["updatearticle",{"_index":176,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatearticle(article",{"_index":194,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatearticledto",{"_index":195,"title":{"classes/UpdateArticleDto.html":{}},"body":{"injectables/ArticleService.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":80,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Like.html":{}}}],["updatedatecolumn",{"_index":103,"title":{},"body":{"classes/Article.html":{},"classes/Author.html":{},"classes/Like.html":{}}}],["username",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":147,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["validator",{"_index":338,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreateAuthorDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateOrDeleteLikeDto.html":{},"classes/UpdateArticleDto.html":{},"classes/ValidIdDto.html":{},"classes/ValidSorted.html":{},"classes/ValidValue.html":{},"dependencies.html":{}}}],["valididdto",{"_index":138,"title":{"classes/ValidIdDto.html":{}},"body":{"controllers/ArticleController.html":{},"controllers/AuthorController.html":{},"classes/ValidIdDto.html":{},"coverage.html":{}}}],["validsorted",{"_index":134,"title":{"classes/ValidSorted.html":{}},"body":{"controllers/ArticleController.html":{},"classes/ValidSorted.html":{},"coverage.html":{}}}],["validvalue",{"_index":143,"title":{"classes/ValidValue.html":{}},"body":{"controllers/ArticleController.html":{},"classes/ValidValue.html":{},"coverage.html":{}}}],["value",{"_index":188,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/StringsService.html":{},"classes/ValidValue.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value].map((char",{"_index":427,"title":{},"body":{"injectables/StringsService.html":{}}}],["variable",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":561,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["wael",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":518,"title":{},"body":{"index.html":{}}}],["website",{"_index":549,"title":{},"body":{"index.html":{}}}],["world",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":539,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthorModule.html":{},"modules/CommentModule.html":{},"modules/LikeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nAuthorModule\n\nAuthorModule\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nCommentModule\n\nCommentModule\n\nAppModule -->\n\nCommentModule->AppModule\n\n\n\n\n\nLikeModule\n\nLikeModule\n\nAppModule -->\n\nLikeModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            AuthorModule\n                        \n                        \n                            CommentModule\n                        \n                        \n                            LikeModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthorModule } from './author/author.module';\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { ArticleModule } from './article/article.module';\nimport { LikeModule } from './like/like.module';\nimport { CommentModule } from './comment/comment.module';\nimport { SharedModule } from './shared/shared.module';\nimport config from '../ormconfig'\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(config),\n    AuthorModule,\n    ArticleModule,\n    LikeModule,\n    CommentModule,\n    SharedModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                body\n                            \n                            \n                                comments\n                            \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                likes\n                            \n                            \n                                likesCount\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Author | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Like[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/article.entity.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Author } from './../author/author.entity';\nimport { Like } from './../like/like.entity';\nimport { Comment } from './../comment/comment.entity';\nimport { Column, CreateDateColumn, Entity, ManyToOne, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\n\n@Entity()\nexport class Article {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ nullable: false })\n    title: string;\n\n    @Column({ nullable: false })\n    body: string;\n\n    @Column({ default: 0 })\n    likesCount: number;\n\n    @ManyToOne(() => Author, author => author.articles, { nullable: false })\n    author: Author | number;\n\n    @OneToMany(() => Comment, comment => comment.article)\n    comments: Comment[];\n\n    @OneToMany(() => Like, like => like.article)\n    likes: Like[];\n\n    @CreateDateColumn()\n    created_at: Date;\n\n    @UpdateDateColumn()\n    updated_at: Date;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(newArticle: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newArticle\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(query: ValidSorted)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ValidSorted\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(Params: ValidIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Params\n                                    \n                                                ValidIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(query: ValidValue)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/search')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ValidValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ValidSorted } from '../dto/is-valid-bool.dto';\nimport { ValidValue } from '../dto/is-valid-string.dto';\nimport { Body, Controller, Get, Param, Post, Query } from '@nestjs/common';\nimport { ValidIdDto } from '../dto/is-valid-id.dto';\nimport { Article } from './article.entity';\nimport { ArticleService } from './article.service';\nimport { CreateArticleDto } from './dto/create-article.dto';\n\n@Controller('article')\nexport class ArticleController {\n\n    constructor(private readonly articleService: ArticleService) { }\n\n    @Post()\n    create(\n        @Body()\n        newArticle: CreateArticleDto\n    ): Promise {\n        return this.articleService.createArticle(newArticle);\n    }\n\n    @Get()\n    getAll(@Query() query: ValidSorted): Promise {\n        return this.articleService.getAll(query.sorted);\n    }\n\n    @Get('/search')\n    search(@Query() query: ValidValue): Promise {\n        return this.articleService.searchArticles(query.value);\n    }\n\n    @Get('/:id')\n    getById(\n        @Param() Params: ValidIdDto\n    ): Promise {\n        return this.articleService.getOneById(Params.id);\n    }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_exports\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_ArticleModule_imports\n\n\n\n\nAuthorModule\n\nAuthorModule\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nAuthorModule->ArticleModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nArticleModule -->\n\nSharedModule->ArticleModule\n\n\n\n\n\nArticleService \n\nArticleService \n\nArticleService  -->\n\nArticleModule->ArticleService \n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from './../shared/shared.module';\nimport { AuthorModule } from './../author/author.module';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ArticleController } from './article.controller';\nimport { Article } from './article.entity';\nimport { ArticleService } from './article.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Article]),\n    AuthorModule,\n    SharedModule\n  ],\n  controllers: [ArticleController],\n  providers: [ArticleService],\n  exports: [ArticleService]\n})\nexport class ArticleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createArticle\n                            \n                            \n                                getAll\n                            \n                            \n                                    Async\n                                getOneById\n                            \n                            \n                                searchArticles\n                            \n                            \n                                    Async\n                                updateArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articleRepo: Repository, authorService: AuthorService, stringsService: StringsService)\n                    \n                \n                        \n                            \n                                Defined in src/article/article.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorService\n                                                  \n                                                        \n                                                                        AuthorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stringsService\n                                                  \n                                                        \n                                                                        StringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createArticle(article: CreateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    article\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(sorted: number)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    sorted\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchArticles\n                        \n                        \n                    \n                \n            \n            \n                \nsearchArticles(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateArticle(article: UpdateArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    article\n                                    \n                                                UpdateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UpdateArticleDto } from './dto/update-article.dto';\nimport { StringsService } from './../shared/strings/strings.service';\nimport { Author } from '../author/author.entity';\nimport { AuthorService } from './../author/author.service';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { Article } from './article.entity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FindManyOptions, Repository } from 'typeorm';\nimport { Like } from \"typeorm\";\n\n@Injectable()\nexport class ArticleService {\n    constructor(\n        @InjectRepository(Article)\n        private articleRepo: Repository,\n        private readonly authorService: AuthorService,\n        private readonly stringsService: StringsService\n    ) { }\n\n    getAll(sorted = 0): Promise {\n        let queryObject: FindManyOptions = {};\n        if (sorted) {\n            queryObject.order = {\n                likesCount: \"DESC\"\n            }\n        }\n        return this.articleRepo.find(queryObject)\n    }\n\n    async getOneById(id: number): Promise {\n        try {\n            const article = await this.articleRepo.findOneOrFail({\n                where:{\n                    id,\n                },\n                relations: [\"comments\", \"comments.author\"]\n            });\n            return article;\n        } catch (error) {\n            throw new NotFoundException('article not found')\n        }\n    }\n\n    async createArticle(article: CreateArticleDto): Promise {\n        try {\n            const author: Author = await this.authorService.getOneById(article.author as number);\n            article.author = author;\n            const newArticle = this.articleRepo.create(article);\n            return this.articleRepo.save(newArticle);\n        } catch (error) {\n            if (error.status == 404) {\n                throw new NotFoundException('Author not found');\n            } else {\n                throw error;\n            }\n        }\n\n    }\n\n    searchArticles(value: string) {\n        const handeldCharacters = this.stringsService.handleQuerySpecialChar(value);\n        return this.articleRepo.find({\n            where: [\n                { title: Like(`%${handeldCharacters}%`) },\n                { body: Like(`%${handeldCharacters}%`) },\n            ]\n        });\n    }\n\n    async updateArticle(article: UpdateArticleDto): Promise {\n        await this.getOneById(article.id)\n        return this.articleRepo.save(article)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Author.html":{"url":"classes/Author.html","title":"class - Author","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Author\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/author.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articles\n                            \n                            \n                                comments\n                            \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                jobTitle\n                            \n                            \n                                likes\n                            \n                            \n                                name\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Article[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jobTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Like[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/author.entity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Article } from \"../article/article.entity\";\nimport { Like } from \"../like/like.entity\";\nimport { Column, CreateDateColumn, Entity, OneToMany, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\nimport { Comment } from './../comment/comment.entity';\n\n\n@Entity()\nexport class Author {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ nullable: false })\n    name: string;\n\n    @Column({ nullable: false })\n    jobTitle: string;\n\n    @OneToMany(() => Article, article => article.author)\n    articles: Article[];\n\n    @OneToMany(() => Comment, comment => comment.author)\n    comments: Comment[];\n\n    @OneToMany(() => Like, like => like.author)\n    likes: Like[];\n\n    @CreateDateColumn()\n    created_at: Date;\n\n    @UpdateDateColumn()\n    updated_at: Date;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthorController.html":{"url":"controllers/AuthorController.html","title":"controller - AuthorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/author.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                author\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(newAuthor: CreateAuthorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/author/author.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newAuthor\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/author/author.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(Params: ValidIdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/author/author.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Params\n                                    \n                                                ValidIdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Author } from '../author/author.entity';\nimport { CreateAuthorDto } from './dto/create-author.dto';\nimport { AuthorService } from './author.service';\nimport { Body, Controller, Get, NotFoundException, Param, Post } from '@nestjs/common';\nimport { ValidIdDto } from '../dto/is-valid-id.dto';\n\n@Controller('author')\nexport class AuthorController {\n    constructor(private readonly authorService: AuthorService) { }\n\n    @Post()\n    create(\n        @Body()\n        newAuthor: CreateAuthorDto\n    ): Promise {\n        return this.authorService.createAuthor(newAuthor);\n    }\n\n    @Get()\n    getAll(): Promise {\n        return this.authorService.getAll();\n    }\n\n    @Get('/:id')\n    getById(\n        @Param() Params: ValidIdDto\n    ): Promise {\n        return this.authorService.getOneById(Params.id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorModule.html":{"url":"modules/AuthorModule.html","title":"module - AuthorModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_exports\n\n\n\ncluster_AuthorModule_providers\n\n\n\n\nAuthorService \n\nAuthorService \n\n\n\nAuthorModule\n\nAuthorModule\n\nAuthorService  -->\n\nAuthorModule->AuthorService \n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/author/author.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthorController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Author } from './author.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { AuthorController } from './author.controller';\nimport { AuthorService } from './author.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Author])\n  ],\n  controllers: [AuthorController],\n  providers: [AuthorService],\n  exports: [AuthorService]\n})\nexport class AuthorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorService.html":{"url":"injectables/AuthorService.html","title":"injectable - AuthorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/author.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAuthor\n                            \n                            \n                                getAll\n                            \n                            \n                                    Async\n                                getOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authorRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/author/author.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authorRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createAuthor\n                        \n                        \n                    \n                \n            \n            \n                \ncreateAuthor(author: CreateAuthorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/author/author.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    author\n                                    \n                                                CreateAuthorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/author/author.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/author/author.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateAuthorDto } from './dto/create-author.dto';\nimport { Author } from './author.entity';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class AuthorService {\n    constructor(@InjectRepository(Author)\n    private authorRepo: Repository) { }\n\n    getAll(): Promise {\n        return this.authorRepo.find()\n    }\n\n    async getOneById(id: number): Promise {\n        try {\n            const author = await this.authorRepo.findOneOrFail(id);\n            return author;\n        } catch (error) {\n            throw new NotFoundException('Author not found')\n        }\n    }\n\n    createAuthor(author: CreateAuthorDto): Promise {\n        const newAuthor = this.authorRepo.create(author);\n        return this.authorRepo.save(newAuthor);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comment/comment.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                author\n                            \n                            \n                                body\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Article | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/comment/comment.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Author | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/comment/comment.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/comment/comment.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/comment/comment.entity.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Article } from \"../article/article.entity\";\nimport { Author } from \"../author/author.entity\";\nimport { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from \"typeorm\";\n\n@Entity()\nexport class Comment {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ nullable: false })\n    body: string;\n\n    @ManyToOne(() => Author, Author => Author.comments, { nullable: false })\n    author: Author | number;\n\n    @ManyToOne(() => Article, Article => Article.comments, { nullable: false })\n    article: Article | number;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommentController.html":{"url":"controllers/CommentController.html","title":"controller - CommentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comment/comment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article/comment\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            comment\n                        \n                        \n                    \n                \n            \n            \n                \ncomment(param: CreateCommentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/comment/comment.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                CreateCommentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateCommentDto } from './dto/create-comment.dto';\nimport { CommentService } from './comment.service';\nimport { Controller, Post, Body } from '@nestjs/common';\nimport { Article } from '../article/article.entity';\n\n@Controller('article/comment')\nexport class CommentController {\n    constructor(\n        private readonly commentService: CommentService\n    ) { }\n\n    @Post()\n    comment(\n        @Body()\n        param: CreateCommentDto\n    ): Promise {\n        return this.commentService.addComment(param);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentModule.html":{"url":"modules/CommentModule.html","title":"module - CommentModule","body":"\n                   \n\n\n\n\n    Modules\n    CommentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommentModule\n\n\n\ncluster_CommentModule_imports\n\n\n\ncluster_CommentModule_providers\n\n\n\ncluster_CommentModule_exports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nCommentModule\n\nCommentModule\n\nCommentModule -->\n\nArticleModule->CommentModule\n\n\n\n\n\nAuthorModule\n\nAuthorModule\n\nCommentModule -->\n\nAuthorModule->CommentModule\n\n\n\n\n\nCommentService \n\nCommentService \n\nCommentService  -->\n\nCommentModule->CommentService \n\n\n\n\n\nCommentService\n\nCommentService\n\nCommentModule -->\n\nCommentService->CommentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/comment/comment.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CommentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            AuthorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Comment } from './comment.entity';\nimport { Module } from '@nestjs/common';\nimport { CommentController } from './comment.controller';\nimport { CommentService } from './comment.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ArticleModule } from '../article/article.module';\nimport { AuthorModule } from '../author/author.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Comment]),\n    ArticleModule,\n    AuthorModule\n  ],\n  controllers: [CommentController],\n  providers: [CommentService],\n  exports: [CommentService]\n})\nexport class CommentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comment/comment.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commentRepo: Repository, articleService: ArticleService, authorService: AuthorService)\n                    \n                \n                        \n                            \n                                Defined in src/comment/comment.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articleService\n                                                  \n                                                        \n                                                                        ArticleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorService\n                                                  \n                                                        \n                                                                        AuthorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addComment(comment: CreateCommentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/comment/comment.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    comment\n                                    \n                                                CreateCommentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateCommentDto } from './dto/create-comment.dto';\nimport { Comment } from './comment.entity';\nimport { Article } from '../article/article.entity';\nimport { AuthorService } from './../author/author.service';\nimport { ArticleService } from './../article/article.service';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class CommentService {\n    constructor(\n        @InjectRepository(Comment)\n        private commentRepo: Repository,\n        private readonly articleService: ArticleService,\n        private readonly authorService: AuthorService) { }\n\n\n    async addComment(comment: CreateCommentDto): Promise {\n        const author = await this.authorService.getOneById(comment.author as number);\n        const article = await this.articleService.getOneById(comment.article as number);\n        comment.author = author\n        const newComment = this.commentRepo.create(comment);\n        const savedComment = await this.commentRepo.save(newComment);\n        article.comments.push({\n            id: savedComment.id,\n            body: savedComment.body,\n            author: savedComment.author\n        } as Comment)\n\n        return article;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                body\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number | Author\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/create-article.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Author } from '../../author/author.entity';\nimport {\n  IsInt,\n  IsNotEmpty,\n  IsString,\n} from \"class-validator\";\n\nimport { Type } from \"class-transformer\"\n\nexport class CreateArticleDto {\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  body: string;\n\n  @IsNotEmpty()\n  @Type(() => Number)\n  @IsInt()\n  author: number | Author;\n  \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthorDto.html":{"url":"classes/CreateAuthorDto.html","title":"class - CreateAuthorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/author/dto/create-author.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                jobTitle\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jobTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/dto/create-author.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/author/dto/create-author.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNotEmpty,\n  IsString,\n} from \"class-validator\";\n\nimport {} from \"class-transformer\"\n\nexport class CreateAuthorDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n  @IsNotEmpty()\n  @IsString()\n  jobTitle: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommentDto.html":{"url":"classes/CreateCommentDto.html","title":"class - CreateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comment/dto/create-comment.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                author\n                            \n                            \n                                body\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number | Article\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/comment/dto/create-comment.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number | Author\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/comment/dto/create-comment.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/comment/dto/create-comment.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsInt,\n  IsNotEmpty,\n  IsString,\n} from \"class-validator\";\n\nimport { Type } from \"class-transformer\"\nimport { Article } from \"../../article/article.entity\";\nimport { Author } from \"../../author/author.entity\";\n\nexport class CreateCommentDto {\n  @IsNotEmpty()\n  @IsString()\n  body: string;\n  \n  @IsNotEmpty()\n  @Type(() => Number)\n  @IsInt()\n  author: number | Author;\n\n  @IsNotEmpty()\n  @Type(() => Number)\n  @IsInt()\n  article: number | Article;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrDeleteLikeDto.html":{"url":"classes/CreateOrDeleteLikeDto.html","title":"class - CreateOrDeleteLikeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrDeleteLikeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/like/dto/create-like.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                author\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number | Article\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/like/dto/create-like.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number | Author\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/like/dto/create-like.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Article } from './../../article/article.entity';\nimport { Author } from './../../author/author.entity';\nimport {\n  IsInt,\n  IsNotEmpty,\n} from \"class-validator\";\n\nimport { Type } from \"class-transformer\"\n\nexport class CreateOrDeleteLikeDto {\n  @IsNotEmpty()\n  @Type(() => Number)\n  @IsInt()\n  author: number | Author;\n  @IsNotEmpty()\n  @Type(() => Number)\n  @IsInt()\n  article: number | Article;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Like.html":{"url":"classes/Like.html","title":"class - Like","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Like\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/like/like.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                            \n                                author\n                            \n                            \n                                created_at\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Article | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {primary: true})@JoinColumn({name: 'articleId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/like/like.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Author | number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {primary: true})@JoinColumn({name: 'authorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/like/like.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/like/like.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/like/like.entity.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Article } from \"../article/article.entity\";\nimport { Author } from \"../author/author.entity\";\nimport { CreateDateColumn, Entity, JoinColumn, ManyToOne, PrimaryColumn, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\n\n@Entity()\nexport class Like {\n\n    @ManyToOne(() => Author, Author => Author.likes, { primary: true, })\n    @JoinColumn({ name: \"authorId\" })\n    author: Author | number;\n\n    @ManyToOne(() => Article, Article => Article.likes, { primary: true, })\n    @JoinColumn({ name: \"articleId\" })\n    article: Article | number;\n    \n    @CreateDateColumn()\n    created_at: Date;\n\n    @UpdateDateColumn()\n    updated_at: Date;\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LikeController.html":{"url":"controllers/LikeController.html","title":"controller - LikeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LikeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/like/like.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article/like\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                like\n                            \n                            \n                                unlike\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            like\n                        \n                        \n                    \n                \n            \n            \n                \nlike(param: CreateOrDeleteLikeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/:author/:article')\n                \n            \n\n            \n                \n                    Defined in src/like/like.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                CreateOrDeleteLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unlike\n                        \n                        \n                    \n                \n            \n            \n                \nunlike(param: CreateOrDeleteLikeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:author/:article')\n                \n            \n\n            \n                \n                    Defined in src/like/like.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                CreateOrDeleteLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Article } from './../article/article.entity';\nimport { LikeService } from './like.service';\nimport { Controller, Delete, Param, Post } from '@nestjs/common';\nimport { CreateOrDeleteLikeDto } from './dto/create-like.dto';\n\n@Controller('article/like')\nexport class LikeController {\n    constructor(\n        private readonly likeService: LikeService\n    ) { }\n\n    @Post('/:author/:article')\n    like(\n        @Param()\n        param: CreateOrDeleteLikeDto\n    ): Promise {\n        return this.likeService.likeArticle(param);\n    }\n\n    @Delete('/:author/:article')\n    unlike(\n        @Param()\n        param: CreateOrDeleteLikeDto\n    ): Promise {\n        return this.likeService.unlikeArticle(param);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LikeModule.html":{"url":"modules/LikeModule.html","title":"module - LikeModule","body":"\n                   \n\n\n\n\n    Modules\n    LikeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LikeModule\n\n\n\ncluster_LikeModule_imports\n\n\n\ncluster_LikeModule_providers\n\n\n\ncluster_LikeModule_exports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nLikeModule\n\nLikeModule\n\nLikeModule -->\n\nArticleModule->LikeModule\n\n\n\n\n\nAuthorModule\n\nAuthorModule\n\nLikeModule -->\n\nAuthorModule->LikeModule\n\n\n\n\n\nLikeService \n\nLikeService \n\nLikeService  -->\n\nLikeModule->LikeService \n\n\n\n\n\nLikeService\n\nLikeService\n\nLikeModule -->\n\nLikeService->LikeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/like/like.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LikeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LikeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            AuthorModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LikeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthorModule } from './../author/author.module';\nimport { ArticleModule } from './../article/article.module';\nimport { Like } from './like.entity';\nimport { Module } from '@nestjs/common';\nimport { LikeController } from './like.controller';\nimport { LikeService } from './like.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Like]),\n    ArticleModule,\n    AuthorModule\n  ],\n  controllers: [LikeController],\n  providers: [LikeService],\n  exports: [LikeService]\n})\nexport class LikeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LikeService.html":{"url":"injectables/LikeService.html","title":"injectable - LikeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LikeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/like/like.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                likeArticle\n                            \n                            \n                                    Async\n                                unlikeArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(likeRepo: Repository, articleService: ArticleService, authorService: AuthorService)\n                    \n                \n                        \n                            \n                                Defined in src/like/like.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        likeRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articleService\n                                                  \n                                                        \n                                                                        ArticleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorService\n                                                  \n                                                        \n                                                                        AuthorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            likeArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    likeArticle(like: CreateOrDeleteLikeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/like/like.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    like\n                                    \n                                                CreateOrDeleteLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            unlikeArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unlikeArticle(like: CreateOrDeleteLikeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/like/like.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    like\n                                    \n                                                CreateOrDeleteLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Article } from '../article/article.entity';\nimport { AuthorService } from './../author/author.service';\nimport { ArticleService } from './../article/article.service';\nimport { CreateOrDeleteLikeDto } from './dto/create-like.dto';\nimport { Like } from './like.entity';\nimport { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class LikeService {\n    constructor(\n        @InjectRepository(Like)\n        private likeRepo: Repository,\n        private readonly articleService: ArticleService,\n        private readonly authorService: AuthorService) { }\n\n\n    async likeArticle(like: CreateOrDeleteLikeDto): Promise {\n        await this.authorService.getOneById(like.author as number);\n        const article = await this.articleService.getOneById(like.article as number);\n        const newLike = this.likeRepo.create(like);\n        await this.likeRepo.save(newLike);\n        article.likesCount++;\n        return this.articleService.updateArticle(article);\n    }\n\n    async unlikeArticle(like: CreateOrDeleteLikeDto): Promise {\n        const deletedResult = await this.likeRepo.delete(like);\n        if (deletedResult.affected != 1) {\n            throw new ConflictException(`can't delete this like`)\n        }\n        const article = await this.articleService.getOneById(like.article as number);\n        article.likesCount--;\n        return this.articleService.updateArticle(article);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nStringsService \n\nStringsService \n\n\n\nSharedModule\n\nSharedModule\n\nStringsService  -->\n\nSharedModule->StringsService \n\n\n\n\n\nStringsService\n\nStringsService\n\nSharedModule -->\n\nStringsService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StringsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StringsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StringsService } from './strings/strings.service';\n\n@Module({\n  providers: [StringsService],\n  exports: [StringsService]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StringsService.html":{"url":"injectables/StringsService.html","title":"injectable - StringsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/strings/strings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleQuerySpecialChar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleQuerySpecialChar\n                        \n                        \n                    \n                \n            \n            \n                \nhandleQuerySpecialChar(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/strings/strings.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StringsService {\n\n    handleQuerySpecialChar(value: string): string {\n        const newValue = [...value].map((char) => {\n            if (char == `%` || char == `_`) {\n                return '\\\\' + char\n            }\n            return char\n        })\n        return newValue.join('')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArticleDto.html":{"url":"classes/UpdateArticleDto.html","title":"class - UpdateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/update-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                body\n                            \n                            \n                                id\n                            \n                            \n                                likesCount\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number | Author\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/update-article.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/update-article.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/update-article.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/update-article.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/article/dto/update-article.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsInt, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Author } from \"../../author/author.entity\";\n\nexport class UpdateArticleDto {\n\n    @IsNotEmpty()\n    @Type(() => Number)\n    @IsInt()\n    id: number;\n\n    @IsNotEmpty()\n    @IsString()\n    title: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n\n    @IsNotEmpty()\n    @Type(() => Number)\n    @IsInt()\n    likesCount: number;\n\n    @IsNotEmpty()\n    @Type(() => Number)\n    @IsInt()\n    author: number | Author;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidIdDto.html":{"url":"classes/ValidIdDto.html","title":"class - ValidIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/is-valid-id.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/is-valid-id.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsInt, IsNotEmpty } from \"class-validator\";\nexport class ValidIdDto {\n    @IsNotEmpty()\n    @Type(() => Number)\n    @IsInt()\n    id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidSorted.html":{"url":"classes/ValidSorted.html","title":"class - ValidSorted","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidSorted\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/is-valid-bool.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sorted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sorted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)@IsEnum(Flag)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/is-valid-bool.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsBoolean, IsEnum, IsOptional } from \"class-validator\";\n\nexport enum Flag {\n    true = 0,\n    false = 1,\n  }\n\nexport class ValidSorted {\n    @IsOptional()\n    @Type(() => Number)\n    @IsEnum(Flag)\n    sorted: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidValue.html":{"url":"classes/ValidValue.html","title":"class - ValidValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dto/is-valid-string.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dto/is-valid-string.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsBoolean, IsNotEmpty, IsString } from \"class-validator\";\nexport class ValidValue {\n    @IsNotEmpty()\n    @IsString()\n    value: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                ormconfig.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/article/article.entity.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/article/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/article/dto/update-article.dto.ts\n            \n            class\n            UpdateArticleDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/author/author.controller.ts\n            \n            controller\n            AuthorController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/author/author.entity.ts\n            \n            class\n            Author\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/author/author.service.ts\n            \n            injectable\n            AuthorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/author/dto/create-author.dto.ts\n            \n            class\n            CreateAuthorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/comment/comment.controller.ts\n            \n            controller\n            CommentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/comment/comment.entity.ts\n            \n            class\n            Comment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/comment/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/comment/dto/create-comment.dto.ts\n            \n            class\n            CreateCommentDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dto/is-valid-bool.dto.ts\n            \n            class\n            ValidSorted\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/is-valid-id.dto.ts\n            \n            class\n            ValidIdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dto/is-valid-string.dto.ts\n            \n            class\n            ValidValue\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/like/dto/create-like.dto.ts\n            \n            class\n            CreateOrDeleteLikeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/like/like.controller.ts\n            \n            controller\n            LikeController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/like/like.entity.ts\n            \n            class\n            Like\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/like/like.service.ts\n            \n            injectable\n            LikeService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/strings/strings.service.ts\n            \n            injectable\n            StringsService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.13\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/mapped-types : ^0.4.1\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Flag   (src/.../is-valid-bool.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dto/is-valid-bool.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Flag\n                    \n                \n                        \n                            \n                                 true\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 false\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LikeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_exports\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_AuthorModule\n\n\n\ncluster_AuthorModule_exports\n\n\n\ncluster_AuthorModule_providers\n\n\n\ncluster_CommentModule\n\n\n\ncluster_CommentModule_exports\n\n\n\ncluster_CommentModule_providers\n\n\n\ncluster_LikeModule\n\n\n\ncluster_LikeModule_exports\n\n\n\ncluster_LikeModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nCommentModule\n\nCommentModule\n\nCommentModule -->\n\nArticleModule->CommentModule\n\n\n\n\n\nLikeModule\n\nLikeModule\n\nLikeModule -->\n\nArticleModule->LikeModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nArticleService \n\nArticleService \n\nArticleService  -->\n\nArticleModule->ArticleService \n\n\n\n\n\nAuthorModule\n\nAuthorModule\n\nArticleModule -->\n\nAuthorModule->ArticleModule\n\n\n\nCommentModule -->\n\nAuthorModule->CommentModule\n\n\n\nLikeModule -->\n\nAuthorModule->LikeModule\n\n\n\nAppModule -->\n\nAuthorModule->AppModule\n\n\n\n\n\nAuthorService \n\nAuthorService \n\nAuthorService  -->\n\nAuthorModule->AuthorService \n\n\n\nAppModule -->\n\nCommentModule->AppModule\n\n\n\n\n\nCommentService \n\nCommentService \n\nCommentService  -->\n\nCommentModule->CommentService \n\n\n\nAppModule -->\n\nLikeModule->AppModule\n\n\n\n\n\nLikeService \n\nLikeService \n\nLikeService  -->\n\nLikeModule->LikeService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nArticleModule -->\n\nSharedModule->ArticleModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStringsService \n\nStringsService \n\nStringsService  -->\n\nSharedModule->StringsService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\nAuthorService\n\nAuthorService\n\nAuthorModule -->\n\nAuthorService->AuthorModule\n\n\n\n\n\nCommentService\n\nCommentService\n\nCommentModule -->\n\nCommentService->CommentModule\n\n\n\n\n\nLikeService\n\nLikeService\n\nLikeModule -->\n\nLikeService->LikeModule\n\n\n\n\n\nStringsService\n\nStringsService\n\nSharedModule -->\n\nStringsService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (ormconfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    ormconfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MysqlConnectionOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: 'mysql',\n    host: 'localhost',\n    port: 3306,\n    username: 'root',\n    password: 'wael',\n    database: 'articles',\n    entities: [\n        __dirname + '/**/*.entity{.ts,.js}',\n    ],\n    synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
